package com.example.kpm.ksoap.src;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.12.1.0
//
// Created by Quasar Development 
//
//----------------------------------------------------



import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.*;
import org.ksoap2.transport.*;
import org.kxml2.kdom.Element;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class PWNBasicHttpsBinding_CabinetMicroService
{
    interface PWNIWcfMethod
    {
        PWNExtendedSoapSerializationEnvelope CreateSoapEnvelope() throws Exception;

        Object ProcessResult(PWNExtendedSoapSerializationEnvelope __envelope, Object result) throws Exception;
    }

    String url="https://api-forexcopy.contentdatapro.com/Services/CabinetMicroService.svc";

    int timeOut=60000;
    private List< HeaderProperty> httpHeaders= new ArrayList< HeaderProperty>();
    private boolean enableLogging;

    PWNIServiceEvents callback;

    public List< HeaderProperty> getHttpHeaders()
    {
        return this.httpHeaders;
    }
    
    public boolean getEnableLogging()
    {
        return this.enableLogging;
    }
    
    public void setEnableLogging(boolean value)
    {
        this.enableLogging=value;
    }
    

    
    public PWNBasicHttpsBinding_CabinetMicroService(){}

    public PWNBasicHttpsBinding_CabinetMicroService (PWNIServiceEvents callback)
    {
        this.callback = callback;
    }
    public PWNBasicHttpsBinding_CabinetMicroService(PWNIServiceEvents callback,String url)
    {
        this.callback = callback;
        this.url = url;
    }

    public PWNBasicHttpsBinding_CabinetMicroService(PWNIServiceEvents callback,String url,int timeOut)
    {
        this.callback = callback;
        this.url = url;
        this.timeOut=timeOut;
    }

    protected Transport createTransport()
    {
        try
        {
            java.net.URI uri = new java.net.URI(url);
            if(uri.getScheme().equalsIgnoreCase("https"))
            {
                int port=uri.getPort()>0?uri.getPort():443;
                String path=uri.getPath();
                if(uri.getQuery()!=null && uri.getQuery()!="")
                {
                    path+="?"+uri.getQuery();
                }
                return new com.easywsdl.exksoap2.transport.AdvancedHttpsTransportSE(uri.getHost(), port, path, timeOut);
            }
            else
            {
                return new com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE(url,timeOut);
            }

        }
        catch (java.net.URISyntaxException e)
        {
        }
        return null;
    }

    protected PWNExtendedSoapSerializationEnvelope createEnvelope()
    {
        PWNExtendedSoapSerializationEnvelope envelope= new PWNExtendedSoapSerializationEnvelope(PWNExtendedSoapSerializationEnvelope.VER11);
        envelope.setEnableLogging( enableLogging);
    
        return envelope;
    }

    protected List sendRequest(String methodName, PWNExtendedSoapSerializationEnvelope envelope, Transport transport , com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile profile )throws Exception
    {
        if(transport instanceof com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE )
        {
            return ((com.easywsdl.exksoap2.transport.AdvancedHttpTransportSE)transport).call(methodName, envelope,httpHeaders,null,profile);
        }
        else
        {
            return ((com.easywsdl.exksoap2.transport.AdvancedHttpsTransportSE)transport).call(methodName, envelope,httpHeaders,null,profile);
        }
    }

    Object getResult(Class destObj, Object source, String resultName, PWNExtendedSoapSerializationEnvelope __envelope) throws Exception
    {
        if(source==null)
        {
            return null;
        }
        if(source instanceof SoapPrimitive)
        {
            SoapPrimitive soap =(SoapPrimitive)source;
            if(soap.getName().equals(resultName))
            {
                Object instance=__envelope.get(source,destObj,false);
                return instance;
            }
        }
        else
        {
            SoapObject soap = (SoapObject)source;
            if (soap.hasProperty(resultName))
            {
                Object j=soap.getProperty(resultName);
                if(j==null)
                {
                    return null;
                }
                Object instance=__envelope.get(j,destObj,false);
                return instance;
            }
            else if( soap.getName().equals(resultName)) 
            {
                Object instance=__envelope.get(source,destObj,false);
                return instance;
            }
        }

        return null;
    }

    
    
    
    public void InsertVisitCounter(final Integer login,final String IP) throws Exception
    {
        com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile __profile = new com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile();
        execute(new PWNIWcfMethod()
        {
            @Override
            public PWNExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                PWNExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "InsertVisitCounter");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="login";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(login!=null?login:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="IP";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(IP!=null?IP:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public Object ProcessResult(PWNExtendedSoapSerializationEnvelope __envelope, Object __result)throws Exception {
                return null;
            }
        },"http://tempuri.org/CabinetMicroService/InsertVisitCounter",__profile);
    }
    
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< Void>> InsertVisitCounterAsync(final Integer login,final String IP)
    {
        return executeAsync(new PWNFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws Exception {
                InsertVisitCounter( login,IP);
                return null;
            }
        },"InsertVisitCounter") ;
    }
    
    
    
    public void InsertErrorLogs(final Integer login,final String errorMessage) throws Exception
    {
        com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile __profile = new com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile();
        execute(new PWNIWcfMethod()
        {
            @Override
            public PWNExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                PWNExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "InsertErrorLogs");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="login";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(login!=null?login:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="errorMessage";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(errorMessage!=null?errorMessage:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public Object ProcessResult(PWNExtendedSoapSerializationEnvelope __envelope, Object __result)throws Exception {
                return null;
            }
        },"http://tempuri.org/CabinetMicroService/InsertErrorLogs",__profile);
    }
    
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< Void>> InsertErrorLogsAsync(final Integer login,final String errorMessage)
    {
        return executeAsync(new PWNFunctions.IFunc< Void>()
        {
            @Override
            public Void Func() throws Exception {
                InsertErrorLogs( login,errorMessage);
                return null;
            }
        },"InsertErrorLogs") ;
    }
    
    
    
    public PWNArrayOfLastLoginDetail GetLastLoginInfo(final Integer login) throws Exception
    {
        com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile __profile = new com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile();
        return (PWNArrayOfLastLoginDetail)execute(new PWNIWcfMethod()
        {
            @Override
            public PWNExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                PWNExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "GetLastLoginInfo");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="login";
                __info.type=PropertyInfo.INTEGER_CLASS;
                __info.setValue(login!=null?login:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public Object ProcessResult(PWNExtendedSoapSerializationEnvelope __envelope, Object __result)throws Exception {
                return (PWNArrayOfLastLoginDetail)getResult(PWNArrayOfLastLoginDetail.class,__result,"GetLastLoginInfoResult",__envelope);
            }
        },"http://tempuri.org/CabinetMicroService/GetLastLoginInfo",__profile);
    }
    
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< PWNArrayOfLastLoginDetail>> GetLastLoginInfoAsync(final Integer login)
    {
        return executeAsync(new PWNFunctions.IFunc< PWNArrayOfLastLoginDetail>() {
            public PWNArrayOfLastLoginDetail Func() throws Exception {
                return GetLastLoginInfo( login);
            }
        },"GetLastLoginInfo");
    }
    
    
    
    public String GetCCPromo(final String lang) throws Exception
    {
        com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile __profile = new com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile();
        return (String)execute(new PWNIWcfMethod()
        {
            @Override
            public PWNExtendedSoapSerializationEnvelope CreateSoapEnvelope(){
                PWNExtendedSoapSerializationEnvelope __envelope = createEnvelope();
                SoapObject __soapReq = new SoapObject("http://tempuri.org/", "GetCCPromo");
                __envelope.setOutputSoapObject(__soapReq);
                
                PropertyInfo __info=null;
                __info = new PropertyInfo();
                __info.namespace="http://tempuri.org/";
                __info.name="lang";
                __info.type=PropertyInfo.STRING_CLASS;
                __info.setValue(lang!=null?lang:SoapPrimitive.NullSkip);
                __soapReq.addProperty(__info);
                return __envelope;
            }
            
            @Override
            public Object ProcessResult(PWNExtendedSoapSerializationEnvelope __envelope, Object __result)throws Exception {
                SoapObject __soap=(SoapObject)__result;
                Object obj = __soap.getProperty("GetCCPromoResult");
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    return j.toString();
                }
                else if (obj!= null && obj instanceof String){
                    return (String)obj;
                }
                return null;
            }
        },"http://tempuri.org/CabinetMicroService/GetCCPromo",__profile);
    }
    
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< String>> GetCCPromoAsync(final String lang)
    {
        return executeAsync(new PWNFunctions.IFunc< String>() {
            public String Func() throws Exception {
                return GetCCPromo( lang);
            }
        },"GetCCPromo");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public String GetCCPromoXML(final String lang) throws Exception
    {
        
/*This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.*/
        throw new UnsupportedOperationException("This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< String>> GetCCPromoXMLAsync(final String lang)
    {
        return executeAsync(new PWNFunctions.IFunc< String>() {
            public String Func() throws Exception {
                return GetCCPromoXML( lang);
            }
        },"GetCCPromoXML");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public String VersionValidator(final String currentVersion) throws Exception
    {
        
/*This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.*/
        throw new UnsupportedOperationException("This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< String>> VersionValidatorAsync(final String currentVersion)
    {
        return executeAsync(new PWNFunctions.IFunc< String>() {
            public String Func() throws Exception {
                return VersionValidator( currentVersion);
            }
        },"VersionValidator");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public String GetLoginStatisticsByCountry(final String month) throws Exception
    {
        
/*This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.*/
        throw new UnsupportedOperationException("This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< String>> GetLoginStatisticsByCountryAsync(final String month)
    {
        return executeAsync(new PWNFunctions.IFunc< String>() {
            public String Func() throws Exception {
                return GetLoginStatisticsByCountry( month);
            }
        },"GetLoginStatisticsByCountry");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public String GetAuthToken(final String login,final String password) throws Exception
    {
        
/*This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.*/
        throw new UnsupportedOperationException("This feature is available in Premium account. To test if generated classes work correctly with your webservice, please use different method. Check https://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.");
    }
    
	/**
	* This method is available in Premium account only. To test if generated classes work correctly with your webservice, please use different method. Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account.
	*/
    
    
    public android.os.AsyncTask< Void, Void, PWNOperationResult< String>> GetAuthTokenAsync(final String login,final String password)
    {
        return executeAsync(new PWNFunctions.IFunc< String>() {
            public String Func() throws Exception {
                return GetAuthToken( login,password);
            }
        },"GetAuthToken");
    }

    protected Object execute(PWNIWcfMethod wcfMethod,String methodName,com.easywsdl.exksoap2.ws_specifications.profile.WS_Profile profile) throws Exception
    {
        Transport __httpTransport=createTransport();
        __httpTransport.debug=enableLogging;
        PWNExtendedSoapSerializationEnvelope __envelope=wcfMethod.CreateSoapEnvelope();
        try
        {
            sendRequest(methodName, __envelope, __httpTransport,profile);
        }
        finally {
            if (__httpTransport.debug) {
                if (__httpTransport.requestDump != null) {
                    android.util.Log.i("requestDump",__httpTransport.requestDump);

                }
                if (__httpTransport.responseDump != null) {
                    android.util.Log.i("responseDump",__httpTransport.responseDump);
                }
            }
        }
        Object __retObj = __envelope.bodyIn;
        if (__retObj instanceof org.ksoap2.SoapFault){
            org.ksoap2.SoapFault __fault = (org.ksoap2.SoapFault)__retObj;
            throw convertToException(__fault,__envelope);
        }else{
            return wcfMethod.ProcessResult(__envelope,__retObj);
        }
    }

    protected < T> android.os.AsyncTask< Void, Void, PWNOperationResult< T>>  executeAsync(final PWNFunctions.IFunc< T> func, final String methodName)
    {
        return new android.os.AsyncTask< Void, Void, PWNOperationResult< T>>()
        {
            @Override
            protected void onPreExecute() {
                callback.Starting();
            }
            @Override
            protected PWNOperationResult< T> doInBackground(Void... params) {
                PWNOperationResult< T> result = new PWNOperationResult< T>();
                try
                {
                    result.setMethodName(methodName);
                    result.setResult(func.Func());
                }
                catch(Exception ex)
                {
                    ex.printStackTrace();
                    result.setException(ex);
                }
                return result;
            }
            
            @Override
            protected void onPostExecute(PWNOperationResult< T> result)
            {
                callback.Completed(result);
            }
        }.execute();
    }

    protected Exception convertToException(org.ksoap2.SoapFault fault,PWNExtendedSoapSerializationEnvelope envelope)
    {
        org.ksoap2.SoapFault newException = fault;
        return newException;
    }
}


